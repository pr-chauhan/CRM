@*@model Tuple<EntityClass.Invoice, EntityClass.Invoice_Detail>*@
@model  Electra_WebApi.Models.InvoiceModel


@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create Invoice</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div style="border: 1px solid #1945d7; border-radius: 5px 5px 5px 5px; padding:5px;">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <table>
            <tr>
                <td>
                    <div class="form-group">
                        @{
                            var Fin_year = new SelectList(
                                new List<SelectListItem>
                                {
                                    new SelectListItem {Text = "2020-2021", Value = "2020-2021"},
                                    new SelectListItem {Text = "2021-2022", Value = "2021-2022"},
                                    new SelectListItem {Text = "2022-2023", Value = "2022-2023"}, }, "Value", "Text");
                        }
                        <div class="col-md-10">
                            @Html.LabelFor(model => model.invoice.Financial_Yr, htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.invoice.Financial_Yr, new SelectList(Fin_year, "Value", "Text"), new { @class = "form-control", @style = "width:125px;", @id = "Financial_Yr" })
                            @Html.ValidationMessageFor(model => model.invoice.Financial_Yr, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
                <td>
                    <div class="form-group">

                        <div class="col-md-10">
                            @Html.LabelFor(model => model.invoice.Invoice_ID, htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.invoice.Invoice_ID, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.INVID, @type = "text", @id = "Invoice_ID", @style = "background-color:#FFA500;width:110px", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.invoice.Invoice_ID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
                <td>
                    <div class="form-group">

                        <div class="col-md-10">
                            @Html.LabelFor(model => model.invoice.Invoice_Date, htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.invoice.Invoice_Date, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.IDT, @type = "date", @style = "width:160px;" } })
                            @Html.ValidationMessageFor(model => model.invoice.Invoice_Date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
                <td>
                    <div class="form-group">

                        <div class="col-md-10">
                            @Html.LabelFor(model => model.invoice.PO_NO, htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.invoice.PO_NO, new { htmlAttributes = new { @class = "form-control", @style = "width:300px;" } })
                            @Html.ValidationMessageFor(model => model.invoice.PO_NO, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
                <td>
                    <div class="form-group">

                        <div class="col-md-10">
                            @Html.LabelFor(model => model.invoice.Removal_Date, htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.invoice.Removal_Date, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.IDT, @type = "date", @style = "width:160px;" } })
                            @Html.ValidationMessageFor(model => model.invoice.Removal_Date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
                <td>
                    <div class="form-group">

                        <div class="col-md-10">
                            @Html.LabelFor(model => model.invoice.Removal_Time, htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.invoice.Removal_Time, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.ITime, @type = "time", @style = "width:120px;" } })
                            @Html.ValidationMessageFor(model => model.invoice.Removal_Time, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
                <td>
                    <label class="checkbox-inline" style="margin-left:20px;margin-top:20px;font-size:large;">
                        <input type="checkbox" id="PerformaInvoice" value="checked" style="zoom:1.25;" />
                        Performa Invoice
                    </label>
                </td>
            </tr>
            <tr>
                <td colspan="4">
                    <div >

                        <div>
                            @Html.LabelFor(model => model.invoice.Consignee_ID, htmlAttributes: new { @class = "control-label " })
                            @Html.DropDownListFor(model => model.invoice.Consignee_ID, new SelectList(ViewBag.CL, "Consignee_ID", "Consignee_Name"), new { @class = "form-control", @style = "width:500px;", @id = "Consignee_ID" })
                            @Html.ValidationMessageFor(model => model.invoice.Consignee_ID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">

                        <div class="col-md-12">
                            @Html.LabelFor(model => model.invoice.Consignee_DelAddress, htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.invoice.Consignee_DelAddress, new { htmlAttributes = new { @class = "form-control", @id = "ConsigneeAddress", @style = "width:400px;height:100px;word-break: break-word;background-color:#FFA500", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.invoice.Consignee_DelAddress, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </td>
                <td colspan="2">
                    <div class="form-group">
                        <div class="col-md-10">

                        </div>
                        <div class="col-md-10">

                            @Html.LabelFor(model => model.invoice.DEL_PARTY, htmlAttributes: new { @class = "control-label" })
                            <input type="checkbox" id="Con_Adr_Check" value="checked" />
                            @Html.LabelFor(model => model.invoice.Con_Adr_Check, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.invoice.Con_Adr_Check, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.invoice.Con_Adr_Check, "", new { @class = "text-danger" })

                            @Html.DropDownListFor(model => model.invoice.DEL_PARTY, new SelectList(ViewBag.CL, "Consignee_ID", "Consignee_Name"), new { @class = "form-control", @style = "width:400px;", @id = "DEL_PARTY" })
                            @Html.ValidationMessageFor(model => model.invoice.DEL_PARTY, "", new { @class = "text-danger" })
                            <div class="col-md-10">
                                @Html.LabelFor(model => model.invoice.Consignee_DelAddress, htmlAttributes: new { @class = "control-label " })
                                @Html.EditorFor(model => model.invoice.Consignee_DelAddress, new { htmlAttributes = new { @class = "form-control", @id = "ConsigneeDelAddress", @style = "width:400px;height : 100px;word-break: break-word;" } })
                                @Html.ValidationMessageFor(model => model.invoice.Consignee_DelAddress, "", new { @class = "text-danger" })
                            </div>

                        </div>
                    </div>

                </td>
                <td colspan="2">

                    <div class="form-group">

                        <div class="col-md-10">

                            @Html.LabelFor(model => model.invoice.Consignee_DelRange, htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.invoice.Consignee_DelRange, new { htmlAttributes = new { @class = "form-control", @id = "Consignee_DelRange" } })
                            @Html.ValidationMessageFor(model => model.invoice.Consignee_DelRange, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">

                        <div class="col-md-10">
                            @Html.LabelFor(model => model.invoice.Consignee_DelDivision, htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.invoice.Consignee_DelDivision, new { htmlAttributes = new { @class = "form-control", @id = "Consignee_DelDivision" } })
                            @Html.ValidationMessageFor(model => model.invoice.Consignee_DelDivision, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">

                        <div class="col-md-10">
                            @Html.LabelFor(model => model.invoice.Consignee_DelCommRate, htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.invoice.Consignee_DelCommRate, new { htmlAttributes = new { @class = "form-control", @id = "Consignee_DelCommRate" } })
                            @Html.ValidationMessageFor(model => model.invoice.Consignee_DelCommRate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </td>
            </tr>
        </table>
        <hr />
        <div style="overflow-y:scroll;height:300px;border:1px solid #1945d7;">
            <fieldset>
                <legend>Item Details</legend>
                <div style="display:inline;">
                    <table cellpadding="5" cellspacing="5">
                        <tr>
                            <td>
                                <label>Item Name</label>
                                @Html.DropDownListFor(model => model.invoice_Detail.Item_id, new SelectList(ViewBag.IT, "Item_ID", "Item_Name"), new { @class = "form-control", @required = "required", @id = "Item_Name", @style = "width:200px;" })
                            </td>
                            <td width="120px">
                                <label> No of Package</label>
                                <input type="text" class="form-control" id="INo_of_pkg" value="" />
                            </td>
                            <td width="120px">
                                <label>Type</label>
                                <select class="form-control" id="IType">
                                    <option value="">Select</option>
                                    <option value="A">A</option>
                                    <option value="B">B</option>
                                    <option value="L">L</option>
                                    <option value="M">M</option>
                                    <option value="N">N</option>
                                    <option value="P">P</option>
                                    <option value="R">R</option>
                                    <option value="S">S</option>
                                    <option value="U">U</option>
                                </select>
                            </td>
                            <td width="120px">
                                <label> Quantity</label>
                                <input type="text" class="form-control" id="IQty" value="" />
                            </td>
                            <td width="120px">
                                <label>Rate</label>
                                <input type="text" class="form-control" id="IRate" value="" />
                            </td>
                            <td width="400px">
                                <label>Description</label>
                                <input type="text" class="form-control" id="IDescription" value="" style="width:400px;" />

                            </td>
                            <td>
                                <label>Command</label><br />
                                <button id="add" type="button" class="btn btn-primary" style="float:right;">Add Line</button>
                            </td>

                        </tr>
                    </table>

                </div>
                <table id="ItemDetailsTable" class="table table-bordered">
                    <thead>
                        <tr>
                            <th width="5%">ID</th>
                            <th width="27%">Item Name</th>
                            <th width="5%">No of Package</th>
                            <th width="5%">Type</th>
                            <th width="5%">Quantity</th>
                            <th width="7%">Rate</th>
                            <th width="10%">Amount</th>
                            <th width="30%">Item Description</th>
                            <th width="5%">Delete</th>
                        </tr>
                    </thead>
                    <tbody>
                        @*<tr id="tablerow0">
                                <td>
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.Invoice_Detail.Item_id, new { htmlAttributes = new { @class = "form-control", @name = "Item_id[0]", @required = "required" }, @type = "text",@value="" })
                                    </div>
                                </td>
                                <td>
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.Invoice_Detail.No_of_pkg, new { htmlAttributes = new { @class = "form-control", @name = "No_of_pkg[0]", @required = "required", @type = "text", @value = "" } })
                                    </div>
                                </td>
                                <td>
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.Invoice_Detail.Qty, new { htmlAttributes = new { @class = "form-control", @name = "Qty[0]", @required = "required", @type = "text", @value = "" } })
                                    </div>
                                </td>
                                <td>
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.Invoice_Detail.Rate, new { htmlAttributes = new { @class = "form-control", @name = "Rate[0]", @required = "required", @type = "text", @value = "" } })
                                    </div>
                                </td>
                                <td>
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.Invoice_Detail.Total_amt, new { htmlAttributes = new { @class = "form-control", @name = "Total_amt[0]", @required = "required", @type = "text", @value = "" } })
                                    </div>
                                </td>

                                <td>
                                    <button type="button" class="btn btn-primary" onclick="removeTr(0);">Delete</button>
                                </td>
                            </tr>*@
                    </tbody>
                </table>

                <hr />


            </fieldset>
        </div>
        <hr />
        <table>
            <tr>
                <td colspan="1">
                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.LabelFor(model => model.invoice.Transporter_Name, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.invoice.Transporter_Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.invoice.Transporter_Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.invoice.Vehicle_No, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.invoice.Vehicle_No, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.invoice.Vehicle_No, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.invoice.GRR_No, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.invoice.GRR_No, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.invoice.GRR_No, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">

                        <div class="col-md-10">
                            @Html.LabelFor(model => model.invoice.DESTINATION1, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.invoice.DESTINATION1, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.invoice.DESTINATION1, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-10">
                            <input type="checkbox" id="DEST_FLAG" value="checked" />
                            @Html.LabelFor(model => model.invoice.DEST_FLAG, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.invoice.DEST_FLAG, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.invoice.DEST_FLAG, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">

                        <div class="col-md-10">
                            @Html.LabelFor(model => model.invoice.DEST_THROUGH2, htmlAttributes: new { @class = "control-label", @id = "lDEST_THROUGH2" })
                            @Html.EditorFor(model => model.invoice.DEST_THROUGH2, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.invoice.DEST_THROUGH2, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">

                        <div class="col-md-10">
                            @Html.LabelFor(model => model.invoice.DESTINATION2, htmlAttributes: new { @class = "control-label", @id = "lDESTINATION2" })
                            @Html.EditorFor(model => model.invoice.DESTINATION2, new { htmlAttributes = new { @class = "form-control", @id = "DESTINATION2" } })
                            @Html.ValidationMessageFor(model => model.invoice.DESTINATION2, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
                <td colspan="1">
                    <div class="form-group">

                        <div class="col-md-10">
                            @Html.LabelFor(model => model.invoice.Total_Ass_Amt, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.invoice.Total_Ass_Amt, new { htmlAttributes = new { @class = "form-control", @id = "Total_Ass_Amt", @style = "background-color:#FFA500", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.invoice.Total_Ass_Amt, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">

                        <div class="col-md-10">
                            @Html.LabelFor(model => model.invoice.Frieght, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.invoice.Frieght, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.invoice.Frieght, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">

                        <div class="col-md-10">
                            @Html.LabelFor(model => model.invoice.Others, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.invoice.Others, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.invoice.Others, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-10" style="margin-top:10px">
                        <table>
                            <tr>
                                <td>
                                    @Html.LabelFor(model => model.invoice.Insurance_per, htmlAttributes: new { @class = "control-label" })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.invoice.Insurance_per, new { htmlAttributes = new { @class = "form-control", @id = "Insurance_per", @onKeyPress = "if(this.value.length==2) return false;", @style = "width:50px;" } })
                                    @Html.ValidationMessageFor(model => model.invoice.Insurance_per, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    <label>&nbsp;%&nbsp;</label>
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.invoice.Insurance_val, new { htmlAttributes = new { @class = "form-control", @style = "background-color:#FFA500", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.invoice.Insurance_val, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                        </table>
                    </div>


                </td>

                <td>
                    <div class="form-group">

                        <div class="col-md-10">
                            @Html.LabelFor(model => model.invoice.Sub_total, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.invoice.Sub_total, new { htmlAttributes = new { @class = "form-control", @style = "background-color:#FFA500", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.invoice.Sub_total, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">

                        <div class="col-md-10">
                            @Html.LabelFor(model => model.invoice.Vat_CST_flag, htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.invoice.Vat_CST_flag, new SelectList(ViewBag.GST, "Value", "Text"), new { @class = "form-control", @style = "width:150px;positopn:top;", @id = "GSTType" })
                            @Html.ValidationMessageFor(model => model.invoice.Vat_CST_flag, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-10" style="margin-top:10px">
                        <table>
                            <tr>
                                <td>
                                    @Html.LabelFor(model => model.invoice.BED_Per, htmlAttributes: new { @class = "control-label", @id = "lGSTPercent" })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.invoice.BED_Per, new { htmlAttributes = new { @class = "form-control", @id = "GSTPercent", @onKeyPress = "if(this.value.length==2) return false;", @style = "width:50px;margin-left:10px;" } })
                                    @Html.ValidationMessageFor(model => model.invoice.BED_Per, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    <label>&nbsp;%&nbsp;</label>
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.invoice.BED_Val, new { htmlAttributes = new { @class = "form-control", @id = "GSTValue", @style = "background-color:#FFA500", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.invoice.BED_Val, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                        </table>
                    </div>
                    <div class="col-md-10" style="margin-top:10px">
                        <table>
                            <tr>
                                <td>
                                    @Html.LabelFor(model => model.invoice.PCess_Per, htmlAttributes: new { @class = "control-label", @id = "lPCess_Per" })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.invoice.PCess_Per, new { htmlAttributes = new { @class = "form-control", @onKeyPress = "if(this.value.length==2) return false;", @style = "width:50px;" } })
                                    @Html.ValidationMessageFor(model => model.invoice.PCess_Per, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    <label> &nbsp;%&nbsp;</label>
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.invoice.PCess_Val, new { htmlAttributes = new { @class = "form-control", @style = "background-color:#FFA500", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.invoice.PCess_Val, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                        </table>
                    </div>

                </td>
                <td>

                    <div class="form-group">

                        <div class="col-md-10">
                            @Html.LabelFor(model => model.invoice.Total_Excise, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.invoice.Total_Excise, new { htmlAttributes = new { @class = "form-control", @style = "background-color:#FFA500", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.invoice.Total_Excise, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">

                        <div class="col-md-10">
                            @Html.LabelFor(model => model.invoice.Total_amount, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.invoice.Total_amount, new { htmlAttributes = new { @class = "form-control", @style = "background-color:#FFA500", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.invoice.Total_amount, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-10" style="margin-top:10px">
                        <table>
                            <tr>
                                <td>
                                    @Html.LabelFor(model => model.invoice.TCSPer, htmlAttributes: new { @class = "input-group-text" })
                                </td>

                                <td>
                                    @Html.EditorFor(model => model.invoice.TCSPer, new { htmlAttributes = new { @class = "form-control", @onKeyPress = "if(this.value.length==3) return false;", @style = "width:50px;" } })
                                    @Html.ValidationMessageFor(model => model.invoice.TCSPer, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    <label> &nbsp;%&nbsp;</label>
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.invoice.TCSVal, new { htmlAttributes = new { @class = "form-control", @style = "background-color:#FFA500;", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.invoice.TCSVal, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                        </table>
                    </div>
                </td>

            </tr>

        </table>

        <script type="text/javascript" src="~/Scripts/jquery.min.js"></script>
        <script type="text/javascript">

            var counter = 0;
            var temp_itemid = "";
            $(document).ready(function () {
                $(function () {

                    var financial_yr = $("#Financial_Yr").val();
                    $.get("/InvoiceMVC/GetInvoiceNo", { financial_yr: financial_yr }, function (data) {
                        $("#Invoice_ID").val(data);
                    });
                    $("#Financial_Yr").change(function () {
                        var financial_yr = $("#Financial_Yr").val();
                        $.get("/InvoiceMVC/GetInvoiceNo", { financial_yr: financial_yr }, function (data) {
                            $("#Invoice_ID").val(data);
                        });
                    });

                    $("#Consignee_ID").change(function () {
                        var id = $("#Consignee_ID").val();
                        $.get("/ConsigneeMVC/GetConsigneeAddress", { Consigneey_id: id }, function (data) {
                            $("#ConsigneeAddress").val(data);
                        });
                        $.get("/ConsigneeMVC/GetCityName", { Consigneey_id: id }, function (data) {
                            $("#DESTINATION2").val(data);
                        });
                        $.getJSON("/ConsigneeMVC/GetConsigneeDetails", { Consigneey_id: id }, function (data) {

                            $("#Consignee_DelRange").val(data[0].RAnge);
                            $("#Consignee_DelDivision").val(data[0].Division);
                            $("#Consignee_DelCommRate").val(data[0].commission_rate);

                        });
                        $("#invoice_Con_Adr_Check").prop('checked', false);
                    });

                    $("#DEL_PARTY").change(function () {
                        var id = $("#DEL_PARTY").val();
                        $.get("/ConsigneeMVC/GetConsigneeAddress", { Consigneey_id: id }, function (data) {
                            $("#ConsigneeDelAddress").val(data);
                        });
                        $.get("/ConsigneeMVC/GetCityName", { Consigneey_id: id }, function (data) {
                            $("#DESTINATION2").val(data);
                        });
                        $("#Consignee_DelRange").val("");
                        $("#Consignee_DelDivision").val("");
                        $("#Consignee_DelCommRate").val("");
                        $("#invoice_Con_Adr_Check").prop('checked', false);
                    });

                    $("#invoice_Con_Adr_Check").hide();
                    $("#Con_Adr_Check").change(function () {
                        if ($(this).is(':checked')) {
                            $("#ConsigneeDelAddress").val($("#ConsigneeAddress").val());
                            $("#invoice_Con_Adr_Check").val("T");
                            $("#ConsigneeDelAddress").attr('readonly', true);
                            $("#Consignee_DelRange").attr('readonly', true);
                            $("#Consignee_DelDivision").attr('readonly', true);
                            $("#Consignee_DelCommRate").attr('readonly', true);
                        }
                        else {
                            $("#ConsigneeDelAddress").val("");
                            $("#invoice_Con_Adr_Check").val("F");
                            $("#ConsigneeDelAddress").attr('readonly', false);
                            $("#Consignee_DelRange").attr('readonly', false);
                            $("#Consignee_DelDivision").attr('readonly', false);
                            $("#Consignee_DelCommRate").attr('readonly', false);
                        }
                    });

                    $("#PerformaInvoice").change(function () {
                        if ($(this).is(':checked')) {
                            $("#Invoice_ID").val("0");
                            var id = $("#Invoice_ID").val();
                            var financial_yr = $("#Financial_Yr").val();
                            alert("Are you sure. Want to create performa invoice ?..!  for Financial Year : " + financial_yr + " And Invoice No. : " + id);
                            if (confirm()) {
                                $.get("/InvoiceMVC/DeletePerformaInvoice", { financial_yr: financial_yr, id: id }, function (data) {
                                    alert("performa invoice deleted successfully..!!");
                                });
                            }

                        }
                    });
                    $("#Consignee_DelRange").change(function () {
                        if ($.isNumeric($("#Consignee_DelRange").val())) {
                            alert("Only Alphabet allowed..!!");
                            $("#Consignee_DelRange").val("");
                            return;
                        }
                    });

                    $("#INo_of_pkg").change(function () {
                        if (!$.isNumeric($("#INo_of_pkg").val())) {
                            alert("Only Number allowed..!!");
                            $("#INo_of_pkg").val("");
                            return;
                        }
                    });
                    $("#IQty").change(function () {
                        if (!$.isNumeric($("#IQty").val())) {
                            alert("Only Number allowed..!!");
                            $("#IQty").val("");
                            return;
                        }
                    });
                    $("#IRate").change(function () {
                        if (!$.isNumeric($("#IRate").val())) {
                            alert("Only Number allowed..!!");
                            $("#IRate").val("");
                            return;
                        }
                    });
                    $("#Insurance_per").change(function () {
                        if (!$.isNumeric($("#Insurance_per").val())) {
                            alert("Only Number allowed..!!");
                            $("#Insurance_per").val("");
                            return;
                        }
                    })

                    $("#invoice_PCess_Per").change(function () {
                        if (!$.isNumeric($("#invoice_PCess_Per").val())) {
                            alert("Only Number allowed..!!");
                            $("#invoice_PCess_Per").val("");
                            return;
                        }
                    })

                    $("#GSTType").change(function () {
                        if ($("#GSTType").val() == "CGST/SGST") {
                            $("#lGSTPercent").text("CGST Percent");
                            $("#lGSTValue").text("CGST Value");
                            $("#GSTPercent").val(6);
                            $("#invoice_PCess_Per").val(6);
                            $("#invoice_PCess_Per").show();
                            $("#invoice_PCess_Val").show();
                            $("#lPCess_Per").show();
                            $("#lPCess_Val").show();
                        }
                        if ($("#GSTType").val() == "UGST") {
                            $("#lGSTPercent").text("UGST Percent");
                            $("#lGSTValue").text("UGST Value");
                            $("#GSTPercent").val(12);
                            $("#invoice_PCess_Per").val(0);
                            $("#invoice_PCess_Per").hide();
                            $("#invoice_PCess_Val").hide();
                            $("#lPCess_Per").hide();
                            $("#lPCess_Val").hide();
                        }
                        if ($("#GSTType").val() == "IGST") {
                            $("#lGSTPercent").text("IGST Percent");
                            $("#lGSTValue").text("IGST Value");
                            $("#GSTPercent").val(12);
                            $("#invoice_PCess_Per").hide();
                            $("#invoice_PCess_Val").hide();
                            $("#lPCess_Per").hide();
                            $("#lPCess_Val").hide();
                            $("#invoice_PCess_Per").val(0);
                        }

                    });

                    $("#invoice_TCSPer").change(function () {
                        var TotalAmount = $("#invoice_Total_amount").val();
                        var TcsPer = (!$.isNumeric($("#invoice_TCSPer").val())) ? 0 : parseFloat($("#invoice_TCSPer").val(), 2);
                        if (TcsPer >= 100) {
                            alert("Invalid Percentage");
                            $("#invoice_TCSPer").val("");
                        }
                        if (TcsPer > 0 && TcsPer < 100) {
                            var TcsVal = Math.round((TotalAmount * TcsPer) / 100, 2);
                            $("#invoice_TCSVal").val(TcsVal);
                        }
                    });

                    $('#add').click(function () {

                        var itemid = $("#Item_Name").val();
                        var item_name = $("#Item_Name").text();
                        //if (temp_itemid == itemid) {
                        //    alert("Duplicate item not allowed");
                        //    return false;
                        //}
                        if ($("#INo_of_pkg").val() == "") {
                            alert("No of Package Required");
                            return;
                        }
                        if ($("#IType").val() == "") {
                            alert("Type Required");
                            return;
                        }
                        if ($("#IQty").val() == "") {
                            alert("Quantity Required");
                            return;
                        }
                        if ($("#IRate").val() == "") {
                            alert("Rate Required");
                            return;
                        }
                        if ($("#IDescription").val() == "") {
                            alert("Description Required");
                            return;
                        }

                        var Noofpak = $("#INo_of_pkg").val();
                        var type = $("#IType").val();
                        var Qty = $("#IQty").val();
                        var Rate = $("#IRate").val();
                        var Amount = Qty * Rate;
                        var description = $("#IDescription").val();



                        $('<tr id="tablerow' + counter + '"><td>' +
                            '<input type="text" class="form-control" id="Item_id[' + counter + ']" value=' + itemid + ' required="required"  readonly=readonly  style = "background-color:#FFA500;" />' +
                            '</td>' +
                            '<td>' +
                            '<input type="text" class="form-control" id="ItemName[' + counter + ']" value=' + item_name + ' required="required"  readonly=readonly   style = "background-color:#FFA500"/>' +
                            '</td>' +
                            '<td>' +
                            '<input type="text" class="form-control" id="No_of_pkg[' + counter + ']" value=' + Noofpak + ' required="required"  readonly=readonly  style = "background-color:#FFA500" />' +
                            '</td>' +
                            '<td>' +
                            '<input type="text" class="form-control" id="TYPE[' + counter + ']" value=' + type + ' required="required"  readonly=readonly   style = "background-color:#FFA500"/>' +
                            '</td>' +
                            '<td>' +
                            '<input type="text" class="form-control" id="Qty[' + counter + ']" value=' + Qty + ' required="required"  readonly=readonly  style = "background-color:#FFA500"/>' +
                            '</td>' +
                            '<td>' +
                            '<input type="text" class="form-control" id="Rate[' + counter + ']" value=' + Rate + ' required="required"  readonly=readonly  style = "background-color:#FFA500"/>' +
                            '</td>' +
                            '<td>' +
                            '<input type="text" class="form-control" id="Total_amt[' + counter + ']" value=' + Amount + ' required="required" readonly=readonly  style = "background-color:#FFA500" />' +
                            '</td>' +
                            '<td>' +
                            '<input type="text" class="form-control" id="Description[' + counter + ']" value=' + description + ' required="required" readonly=readonly  style = "background-color:#FFA500"/>' +
                            '</td>' +
                            '<td>' +
                            '<button type="button" id="DeleteRow' + counter + '" class="btn btn-danger" onclick="removeTr(' + counter + ');">Delete</button>' +
                            '</td>' +
                            '</tr>').appendTo('#ItemDetailsTable');
                        counter++;
                        $("#INo_of_pkg").val("");
                        $("#IQty").val("");
                        $("#IQty").val("");
                        $("#IRate").val("");
                        $("#IDescription").val("");
                        var Total_Amt = parseFloat(($("#Total_Ass_Amt").val() == "" ? 0 : $("#Total_Ass_Amt").val())) + parseFloat(Amount);
                        $("#Total_Ass_Amt").val(Math.round(Total_Amt));
                        TotalAssValTaxCalculation();
                        temp_itemid = itemid;

                        return false;

                    });
                    $("#invoice_Frieght").change(function () {
                        TotalAssValTaxCalculation();
                    });
                    $("#invoice_Others").change(function () {
                        TotalAssValTaxCalculation();
                    });
                    $("#GSTPercent").change(function () {
                        TotalAssValTaxCalculation();
                    });
                    $("#invoice_PCess_Per").change(function () {
                        TotalAssValTaxCalculation();
                    });
                    $("#Insurance_per").change(function () {
                        TotalAssValTaxCalculation();
                    });
                    $("#GSTType").change(function () {
                        TotalAssValTaxCalculation();
                    });
                    $("#invoice_TCSPer").change(function () {
                        TotalAssValTaxCalculation();
                    });



                    $("#invoice_DESTINATION1").change(function () {
                        if ($("#invoice_DESTINATION1").val() == $("#DESTINATION2").val()) {
                            alert("From Source and destination to can not be same..!!");
                            $("#invoice_DESTINATION1").val("");
                        }
                    });
                    $("#lDEST_THROUGH2").hide();
                    $("#lDESTINATION2").hide();
                    $("#invoice_DEST_THROUGH2").hide();
                    $("#DESTINATION2").hide();
                    $("#invoice_DEST_FLAG").hide()
                    $("#DEST_FLAG").change(function () {
                        if ($(this).is(':checked')) {
                            $("#invoice_DEST_FLAG").val("Yes");
                            $("#lDEST_THROUGH2").show();
                            $("#lDESTINATION2").show();
                            $("#invoice_DEST_THROUGH2").show();
                            $("#DESTINATION2").show();
                        }
                        else {
                            $("#invoice_DEST_FLAG").val("No");
                            $("#invoice_DEST_THROUGH2").val("");
                            $("#DESTINATION2").val("");
                            $("#lDEST_THROUGH2").hide();
                            $("#lDESTINATION2").hide();
                            $("#invoice_DEST_THROUGH2").hide();
                            $("#DESTINATION2").hide();

                        }
                    });




                    function TotalAssValTaxCalculation() {
                        var Total_Assmt = 0;
                        var Total = 0;
                        var InsVal = 0;
                        var SubTot = 0;
                        var cRate = 0;
                        var sRate = 0;
                        var cAmount = 0;
                        var sAmount = 0;
                        var TotalTax = 0;
                        var TotalAmount = 0;
                        var freight = 0;
                        var other = 0;
                        var InsPer = 0;
                        var TcsPer = 0;
                        var TcsVal = 0;
                        $("#Total_Ass_Amt").val(Total_Assmt);
                        $("#invoice_Sub_total").val(SubTot);
                        $("#invoice_Total_Excise").val(TotalTax);
                        $("#invoice_Total_amount").val(TotalAmount);
                        $("#invoice_Insurance_val").val(InsVal);
                        $("#GSTValue").val(cAmount);
                        $("#ItemDetailsTable TBODY TR").each(function () {
                            row = $(this);
                            Total_Assmt += parseFloat(row.find("td:eq(6) input[type='text']").val());
                            $("#Total_Ass_Amt").val(Math.round(Total_Assmt));
                        });
                        Total = (!$.isNumeric($("#Total_Ass_Amt").val())) ? 0 : parseFloat($("#Total_Ass_Amt").val(), 2);
                        freight = (!$.isNumeric($("#invoice_Frieght").val())) ? 0 : parseFloat($("#invoice_Frieght").val(), 2);
                        other = (!$.isNumeric($("#invoice_Others").val())) ? 0 : parseFloat($("#invoice_Others").val(), 2);
                        InsPer = (!$.isNumeric($("#Insurance_per").val())) ? 0 : parseFloat($("#Insurance_per").val(), 2);
                        if (InsPer > 0) {
                            InsVal = Math.round((Total_Assmt * InsPer) / 100, 2);
                            $("#invoice_Insurance_val").val(InsVal);
                        }
                        Total = Math.round(Total + freight + other, 2);
                        SubTot = Total + InsVal;
                        $("#invoice_Sub_total").val(SubTot);
                        cRate = (!$.isNumeric($("#GSTPercent").val())) ? 0 : parseFloat($("#GSTPercent").val(), 2);
                        sRate = (!$.isNumeric($("#invoice_PCess_Per").val())) ? 0 : parseFloat($("#invoice_PCess_Per").val(), 2);
                        $("#GSTValue").val(cAmount);
                        if (Total_Assmt > 0 && SubTot > 0) {
                            cAmount = Math.round(((SubTot * cRate) / 100), 2);
                            $("#GSTValue").val(cAmount);
                        }
                        $("#invoice_PCess_Val").val(sAmount);
                        if (Total_Assmt > 0 && sRate > 0) {
                            sAmount = Math.round(((SubTot * sRate) / 100), 2);
                            $("#invoice_PCess_Val").val(sAmount);
                        }
                        TotalTax = Math.round(cAmount + sAmount, 2);
                        TotalAmount = Math.round(SubTot + TotalTax, 2);
                        $("#invoice_Total_Excise").val(TotalTax);
                        $("#invoice_Total_amount").val(TotalAmount);
                        TcsPer = (!$.isNumeric($("#invoice_TCSPer").val())) ? 0 : parseFloat($("#invoice_TCSPer").val(), 2);
                        if (TcsPer > 0) {
                            TcsVal = Math.round((TotalAmount * TcsPer) / 100, 2);
                            $("#invoice_TCSVal").val(TcsVal);
                        }

                    }

                    $("#submit").click(function () {

                        if ($("#invoice_PO_NO").val() == "") {
                            alert("Please check PO Number.");
                            return false;
                        }
                        if ($("#ConsigneeAddress").val() == "") {
                            alert("Please check consignee address.");
                            return false;
                        }
                        if ($("#invoice_Invoice_Date").val() == "") {
                            alert("Please check invoice date.");
                            return false;
                        }
                        if ($("#ConsigneeDelAddress").val() == "") {
                            alert("Please check consignee delivery address.");
                            return false;
                        }
                        if ($("#Consignee_DelRange").val() == "") {
                            alert("Please check Range.");
                            return false;
                        }
                        if ($("#Consignee_DelDivision").val() == "") {
                            alert("Please check Division.");
                            return false;
                        }
                        if ($("#Consignee_DelCommRate").val() == "") {
                            alert("Please check commission rate.");
                            return false;
                        }
                        var Assmt = 0;
                        var r;
                        $("#ItemDetailsTable TBODY TR").each(function () {
                            r = $(this);
                            Assmt += parseFloat(r.find("td:eq(6) input[type='text']").val());
                            if (Assmt <= 0) {
                                alert("Please check item details in list.");
                                return false;
                            }
                        });

                        if ($("#Total_Ass_Amt").val() == "") {

                            alert("Please check Assessment Value.");
                            return false;
                        }
                        if ($("#invoice_Sub_total").val() == "") {
                            alert("Please check sub total Value.");
                            return false;
                        }
                        if ($("#invoice_Total_Excise").val() == "") {
                            alert("Please check total tax Value.");
                            return false;
                        }
                        if ($("#invoice_Total_amount").val() == "") {
                            alert("Please check total Value.");
                            return false;
                        }
                        if ($("#invoice_DESTINATION1").val() == "") {
                            alert("Please check From Batouli To.");
                            return false;
                        }
                        if ($("#DESTINATION2").val() == "") {
                            alert("Please check To : Destination.");
                            return false;
                        }
                        if ($("#GSTType").val() == "") {
                            alert("Please check GST Type.");
                            return false;
                        }
                        if ($("#GSTPercent").val() == "") {
                            alert("Please check GST Percentage.");
                            return false;
                        }

                        var Item_id = 0;
                        var No_of_pkg = 0;
                        var Qty = 0;
                        var Rate = 0;
                        var Total_amt = 0;
                        var row;
                        $("#ItemDetailsTable TBODY TR").each(function () {
                            row = $(this);
                            Item_id = row.find("td:eq(0) input[type='text']").val();
                            No_of_pkg = row.find("td:eq(2) input[type='text']").val();
                            type = row.find("td:eq(3) input[type='text']").val();
                            Qty = row.find("td:eq(4) input[type='text']").val();
                            Rate = row.find("td:eq(5) input[type='text']").val();;
                            Total_amt = row.find("td:eq(6) input[type='text']").val();
                            description = row.find("td:eq(7) input[type='text']").val();
                            fy_year = $("#Financial_Yr").val();
                            invoiceid = $("#Invoice_ID").val();


                            $.post("/InvoiceMVC/SaveInvoiceDetail", {
                                Item_id: Item_id, No_of_pkg: No_of_pkg,
                                type: type, Qty: Qty, Rate: Rate, Total_amt:
                                    Total_amt, description: description,
                                fy_year: fy_year, invoiceid: invoiceid
                            }, function (data) {
                                //  alert("Done");
                            });
                        });
                    });
                });




            });
            function removeTr(index) {
                if (confirm('Are you sure to delete this row ?')) {
                    if (counter => 1) {
                        $('#tablerow' + index).remove();
                        counter--;
                    }
                    //TotalAssValTaxCalculation Function is not able to call so write code here to refresh calculation.
                    var Total_Assmt = 0;
                    var Total = 0;
                    var InsVal = 0;
                    var SubTot = 0;
                    var cRate = 0;
                    var sRate = 0;
                    var cAmount = 0;
                    var sAmount = 0;
                    var TotalTax = 0;
                    var TotalAmount = 0;
                    var freight = 0;
                    var other = 0;
                    var InsPer = 0;
                    var TcsPer = 0;
                    var TcsVal = 0;
                    $("#Total_Ass_Amt").val(Total_Assmt);
                    $("#invoice_Sub_total").val(SubTot);
                    $("#invoice_Total_Excise").val(TotalTax);
                    $("#invoice_Total_amount").val(TotalAmount);
                    $("#invoice_Insurance_val").val(InsVal);
                    $("#GSTValue").val(cAmount);
                    $("#ItemDetailsTable TBODY TR").each(function () {
                        row = $(this);
                        Total_Assmt += parseFloat(row.find("td:eq(6) input[type='text']").val());
                        $("#Total_Ass_Amt").val(Math.round(Total_Assmt));
                    });
                    Total = (!$.isNumeric($("#Total_Ass_Amt").val())) ? 0 : parseFloat($("#Total_Ass_Amt").val(), 2);
                    freight = (!$.isNumeric($("#invoice_Frieght").val())) ? 0 : parseFloat($("#invoice_Frieght").val(), 2);
                    other = (!$.isNumeric($("#invoice_Others").val())) ? 0 : parseFloat($("#invoice_Others").val(), 2);
                    InsPer = (!$.isNumeric($("#Insurance_per").val())) ? 0 : parseFloat($("#Insurance_per").val(), 2);
                    if (InsPer > 0) {
                        InsVal = Math.round((Total_Assmt * InsPer) / 100, 2);
                        $("#invoice_Insurance_val").val(InsVal);
                    }
                    Total = Math.round(Total + freight + other, 2);
                    SubTot = Total + InsVal;
                    $("#invoice_Sub_total").val(SubTot);
                    cRate = (!$.isNumeric($("#GSTPercent").val())) ? 0 : parseFloat($("#GSTPercent").val(), 2);
                    sRate = (!$.isNumeric($("#invoice_PCess_Per").val())) ? 0 : parseFloat($("#invoice_PCess_Per").val(), 2);
                    $("#GSTValue").val(cAmount);
                    if (Total_Assmt > 0 && SubTot > 0) {
                        cAmount = Math.round(((SubTot * cRate) / 100), 2);
                        $("#GSTValue").val(cAmount);
                    }
                    $("#invoice_PCess_Val").val(sAmount);
                    if (Total_Assmt > 0 && sRate > 0) {
                        sAmount = Math.round(((SubTot * sRate) / 100), 2);
                        $("#invoice_PCess_Val").val(sAmount);
                    }
                    TotalTax = Math.round(cAmount + sAmount, 2);
                    TotalAmount = Math.round(SubTot + TotalTax, 2);
                    $("#invoice_Total_Excise").val(TotalTax);
                    $("#invoice_Total_amount").val(TotalAmount);
                    TcsPer = (!$.isNumeric($("#invoice_TCSPer").val())) ? 0 : parseFloat($("#invoice_TCSPer").val(), 2);
                    if (TcsPer > 0) {
                        TcsVal = Math.round((TotalAmount * TcsPer) / 100, 2);
                        $("#invoice_TCSVal").val(TcsVal);
                    }
                    return false;
                }

            }
        </script>
        <br /><br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="submit" type="submit" value="Create" class="btn btn-success" style="float:right;zoom:1.25;" />
            </div>
        </div>
        <br />
    </div>

    <hr />
}

<div>
    @Html.ActionLink("Back to List", "Index", "", new { @class = "btn btn-primary" })
</div>
